exit
c
server.send 'server', 0, addr[3], addr[1]
exit
msg
server.addr.values_at(3,1)
*server.addr.values_at(3,1)
c
exit
server
c
client.addr
client
c
resp = [5,0,0,1, remote_host.to_i, remote_port].pack('CCCCNn')
exit
[5,0,0,1, remote_host.to_i, remote_port].pack('CCCCCNn')
c
remote_host.hton
"34c04859".unpack('H2H2H2H2')
"34c04859".unpack('HHHH')
"34c04859".unpack('H8')
"34c04859".unpack('H4')
"34c04859".unpack('4H')
"34c04859".unpack('H')
[5,0,0,4,remote_host.to_i.to_s(16), remote_port].pack('CCCCH8n').unpack('CCCCH8n')
[5,0,0,4,remote_host.to_i.to_s(16), remote_port].pack('CCCCH16n').unpack('CCCCH16n')
[5,0,0,4,remote_host.to_i.to_s(16), remote_port].pack('CCCCH16n').unpack('CCCCH8n')
[5,0,0,4,remote_host.to_i.to_s(16), remote_port].pack('CCCCH8n').unpack('CCCCH8n')
[5,0,0,4,remote_host.to_i.to_s(16), remote_port].pack('CCCCH4n').unpack('CCCCH4n')
[5,0,0,4,remote_host.to_i.to_s(16), remote_port].pack('CCCCH4n')
remote_host.to_i.to_s(16)
exit
remote_host
remote_host.to_i
remote_host.to_i.to_s(16)
c
host.join(".")
host
port
c
host
c
client.gets
exit
client.read(20).unpack('C*')
client.read(20).unpack('H*')
_.unpack('H*')
client.read(100)
exit
c
cc
c
exit
readable[0]
readable
r.read(1)
r[0].fileno
r[0].read_nonblock(1024)
r.read_nonblock(1024)
readable
r.fd
r.fileno
client.fileno
r.methods.sort
client
r
readable
c
exit
remote
client
client.read(10)
c
[5,0,0,4,remote_host.to_i.to_s(16), remote_port]
n
remote_type == 'AF_INET6'
remote
exit
[5,0,0,4,remote_host.to_i.to_s(16), remote_port].pack('CCCCH32n')
remote_host.hton.unpack('H8')
remote_host.to_i.to_s(16)
remote_host.hton
remote_host.hton.unpack('H32')
remote_host.hton.unpack('H32').pack('H32')
remote_host.hton.unpack('H8').pack('H8')
remote_host.hton.unpack('HHHH').pack('HHHHHHH')
remote_host.hton.unpack('HHHH').pack('HHHH')
remote_host.hton.unpack('HHHH').pack('4H')
remote_host.hton.unpack('4H').pack('4H')
remote_host.hton.unpack('H*').pack('4H')
remote_host.hton.unpack('H*').pack('H*')
remote_host.hton.unpack('H*').pack('4H')
remote_host.hton.unpack('H*').pack('H')
remote_host.hton.unpack('H*').pack('N')
remote_host.hton.unpack('H*').pack('4N')
remote_host.hton.unpack('H*')
remote_host.hton.unpack('H')
remote_host.hton
remote_host.thon
remote_host.to_s.split(':').pack('8N')
remote_host.to_s.split(':').pack('8n')
remote_host.to_s.split(':')
remote_host.to_s
remote_host.to_d
remote_host
[remote_host.to_i]
[remote_host.to_i].pack("N").unpack('8C')
[remote_host.to_i].pack("NN").unpack('8C')
[remote_host.to_i].pack("N")
[remote_host.to_i].pack("NNNN")
[remote_host.to_i].pack('NNNN')
"$\x00$\x12\x06@]\x00\\\x90HD\x9Cz\xB7\xF1".unpack("NNNN")
"$\x00$\x12\x06@]\x00\\\x90HD\x9Cz\xB7\xF1".unpack("NNNNNNNN")
"$\x00$\x12\x06@]\x00\\\x90HD\x9Cz\xB7\xF1".unpack("NNNN")
"$\x00$\x12\x06@]\x00\\\x90HD\x9Cz\xB7\xF1".pack("NNNN")
remote_host.to_i.to_s(16)
remote_host.to_i.to_s
remote_host.hton
[remote_host.to_i].pack('2N').unpack('2N')
[remote_host.to_i].pack('2N')
remote_host.to_i.pack('N*')
[remote_host.to_i].pack('N*')
[remote_host.to_i].pack('N8')
[remote_host.to_i].pack('NNNNNNNN')
[remote_host.to_i].pack('N*')
remote_host.to_i
remote_host.to_s
remote_host.methods
remote_host.ipv6?
remote_host.ipv6
remote_host
remote_host.to_hex
[remote_host.to_i].pack('N*').unpack('N*')
[remote_host.to_i].pack('N*').unpack('N4')
[remote_host.to_i].pack('N4').unpack('N4')
[remote_host.to_i].pack('N').unpack('N')
[remote_host.to_i].pack('N')
remote_host
"\x05\x00\x00\x04\x9Cz\xB7\xF1\xC8\xF1".unpack('CCCCN8n')
"\x05\x00\x00\x04\x9Cz\xB7\xF1\xC8\xF1".unpack('CCCCNn')
"\x05\x00\x00\x04\x9Cz\xB7\xF1\xC8\xF1".unpack('CCCCC16n')
"\x05\x00\x00\x04\x9Cz\xB7\xF1\xC8\xF1".unpack('CCCCNn')
[5,0,0,4,remote_host.to_i, remote_port]
res
c
remote.addr
remote.getsockname
remote.methods.sort
remote
exit
port
atyp
atype
exit
"\x01\xBB".unpack('H')
"\x01\xBB".unpack('h')
"\x01\xBB".unpack('n')
"\x01\xBB".unpack('CC')
client.read(2)
"\x01\xBB".unpack('H')
"\x01\xBB".unpack('CC')
"\x01\xBB".unpack('HH')
"\x01\xBB".unpack('H*')
"\x01\xBB".unpack('H+')
"\x01\xBB".unpack('H')
client.read(2)
domain
exit
domain
exit
"\x05".ord
atyp
cmd
exit
"\x05\x01\x00\x03".unpack('CCCC')
d = client.read(4)
d.unpack('H*')
d.unpack('H')
d.unpack
d = client.read(4)
exit
header.unpack('CC')
header.unpack('cc')
header.unpack('nn')
client.recv(4)
header.unpack('CC')
header.unpack('H*')
header
c
client.readbyte
client.methods.sort
client.gets
